%user
  .row
    .column
      %unsplash-cover{ store: "{store}" }
  .row
    .column.centered.avatar-box
      %img.avatar{ src: "{ user.avatarLg }" }
      %h2 { user.name }
      %h4 { user.jobTitle }
    .avatar-spacer
  .row
    .column
      %p.gray
        { user.bio }
      %p
        %strong Location:
        { user.location }
      %p
        %strong Nationality:
        { user.nationality }

  .s20

  %h3 Skills
  .row
    .column{ each: "{ skill, level in skills }" }
      { s.capitalize(skill) } { _(Number(level)).times(stars).join("") }
  .clear

  .s30
  %h3 Positions

  -#  @userId, @orgId, @role, @dateStart, @dateEnd, @reportsTo, @budget, @desc }) ->

  %section{ each: "{ empl in empls }" }
    %h5 { empl.role }
    %h5
      %a{ href: "/#/orgs/{ empl.org.id }" } { empl.org.name }
    %p
      { empl.desc || "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In consequat mauris et ante pretium ultricies." }

  .gray
    .s30
    %h3 Education
    %h5 Degree in Astrophysics
    %h5 UCL
    %p
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. In consequat mauris et ante pretium ultricies. Curabitur eget ante eu enim efficitur congue. Praesent non condimentum turpis.

  %publicKeyUser{ store: "{store}" }

  :coffee
    entry_id = BR.getEntryId()
    BR.loadFromCollection "user", entry_id, this

    @stars = (i) -> "â˜…"

    BR.prepare opts, @, =>
      @empls =  _(StoreData.empl).select (empl) -> empl.userId == entry_id
      _(@empls).each (empl) ->
        empl.org = _(StoreData.orgs).find (org) ->
          empl.orgId == org.id
      c.log @empls

      if @user
        try
          @skills = JSON.parse @user.skills
        catch error
          c.error "Skills JSON is invalid: \#{error}"

  :sass
    .avatar-box
      position: absolute
      top: 180px
      left: 0
    .avatar-box img
      border: 15px solid #FFF
      box-shadow: 0 0 22px 0 #777

    .avatar-spacer
      height: 180px








-# ----------------------------------------------------------
-# PUBLIC _ KEY TODO: move

%publicKeyUser
  .row
    .column.right
      %p
        - hint = { class: "hint--bottom-left hint--rounded", :"data-hint" => "{ user.publicKey }" }
        .icon-mini{ hint } ðŸ”‘
        %br
        %span{ hint } publicKey
        %br
        %span{ hint } { user.publicKeyShort }

  :coffee
    entry_id = BR.getEntryId()
    BR.loadFromCollection "user", entry_id, this, presentUser

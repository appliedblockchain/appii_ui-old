// Generated by CoffeeScript 1.10.0
var BApi, G, api, bappHost, c, contractName, formElem, getParam, host, info, methodPost, postJSON, setLoaded, setLoading, spinner, submit;

bappHost = "localhost:3001";

contractName = 'contact_form';

c = console || {
  log: function() {}
};

G = window;

BApi = (function() {
  function BApi(host1) {
    this.host = host1;
  }

  BApi.prototype.methodGet = function(contractName, name, values) {
    var host, query;
    host = "http://" + this.host;
    query = $.param(values);
    return host + "/api/" + contractName + "/" + name + "?" + query;
  };

  BApi.prototype.get = function() {
    var contract, methodName, values;
    contract = "users";
    methodName = "get";
    values = {
      values: [1],
      types: ["uint256"]
    };
    c.log(methodName + "(" + (values.values.join(", ")) + ") called!");
    return $.getJSON(this.methodGet(contract, methodName, values), function(lastName) {
      lastName = lastName.value;
      return c.log("getLast() //=> '" + lastName + "'");
    });
  };

  return BApi;

})();

host = bappHost;

api = new BApi(host);

c.log(api.get());

methodPost = function(name) {
  host = "http://" + bappHost;
  return host + "/api/" + contractName + "/" + name;
};

postJSON = function(url, params, callback) {
  return $.post(url, params, callback, 'json');
};

formElem = $("form#contact");

getParam = function(param, params) {
  var par;
  par = _(params).find(function(p) {
    return p.name === param;
  });
  return par.value;
};

spinner = $(".spinner");

info = $(".message");

submit = $("form#contact input[type='submit']");

setLoading = function() {
  submit.attr("disabled", true);
  spinner.css({
    visibility: "visible"
  });
  return info.html("loading...");
};

setLoaded = function(contract_address) {
  spinner.css({
    visibility: "hidden"
  });
  return info.html("We have received your message and we'll contact you shortly.");
};

formElem.on("submit", function(evt) {
  var params, values;
  evt.preventDefault();
  setLoading();
  params = formElem.serializeArray();
  values = {
    values: [email, firstName, lastName],
    types: ["bytes32", "bytes32", "bytes32"]
  };
  c.log("addContact(" + (values.values.join(", ")) + ") called!");
  return postJSON(methodPost("addContact"), values, function(resp) {
    c.log("addContact() //=> '" + (JSON.stringify(resp)) + "'");
    if (resp.success) {
      return c.log("Success!!");
    }
  });
});
